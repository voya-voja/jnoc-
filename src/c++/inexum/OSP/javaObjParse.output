Terminals which are not used:

   OBJECT_ANNOTATION


Grammar

  Number, Line, Rule
    1 158 startContent -> content
    2 162 contents -> content
    3 164 contents -> contents content
    4 167 content -> object
    5 169 content -> blockdata
    6 172 object -> newObject
    7 174 object -> newClass
    8 175 object -> newArray
    9 176 object -> newString
   10 177 object -> newClassDesc
   11 178 object -> prevObject
   12 179 object -> nullReference
   13 180 object -> exception
   14 181 object -> reset
   15 184 newClass -> TC_CLASS classDesc newHandle
   16 188 classDesc -> newClassDesc
   17 190 classDesc -> nullReference
   18 191 classDesc -> prevObject
   19 195 superClassDesc -> classDesc
   20 199 @1 -> /* empty */
   21 199 @2 -> /* empty */
   22 199 @3 -> /* empty */
   23 199 newClassDesc -> TC_CLASSDESC @1 className @2 serialVersionUID newHandle @3 classDescInfo
   24 210 className -> utf
   25 214 serialVersionUID -> LONG
   26 218 @4 -> /* empty */
   27 218 classDescInfo -> classDescFlags @4 fields classAnnotation superClassDesc
   28 224 classDescFlags -> BYTE
   29 229 @5 -> /* empty */
   30 229 fields -> SHORT @5 fieldDescs
   31 232 fields -> SHORT
   32 235 fieldDescs -> fieldDesc
   33 237 fieldDescs -> fieldDescs fieldDesc
   34 240 fieldDesc -> primitiveDesc
   35 242 fieldDesc -> objectDesc
   36 245 @6 -> /* empty */
   37 245 primitiveDesc -> prim_typecode @6 fieldName
   38 250 @7 -> /* empty */
   39 250 objectDesc -> obj_typecode @7 fieldName className1
   40 255 fieldName -> utf
   41 259 className1 -> newString
   42 261 className1 -> prevObject
   43 264 classAnnotation -> endBlockData
   44 266 classAnnotation -> contents endBlockData
   45 269 prim_typecode -> 'B'
   46 271 prim_typecode -> 'C'
   47 272 prim_typecode -> 'D'
   48 273 prim_typecode -> 'F'
   49 274 prim_typecode -> 'I'
   50 275 prim_typecode -> 'J'
   51 276 prim_typecode -> 'S'
   52 277 prim_typecode -> 'Z'
   53 280 obj_typecode -> '['
   54 282 obj_typecode -> 'L'
   55 286 @8 -> /* empty */
   56 286 newArray -> TC_ARRAY classDesc newHandle @8 elementArray ARRAY_END
   57 291 @9 -> /* empty */
   58 291 newObject -> TC_OBJECT classDesc newHandle @9 classdataList OBJECT_END
   59 296 classdataList -> /* empty */
   60 298 classdataList -> nowrclassList
   61 299 classdataList -> wrclassList
   62 300 classdataList -> externalContentList
   63 301 classdataList -> objectAnnotationList
   64 304 nowrclassList -> NOWRCLASS values
   65 306 nowrclassList -> NOWRCLASS
   66 309 wrclassList -> WRCLASS wrclasses
   67 313 wrclasses -> wrclass
   68 315 wrclasses -> wrclasses wrclass
   69 318 wrclass -> value objectAnnotation
   70 322 externalContentList -> EXTERNAL_CONTENTS externalContents
   71 326 externalContents -> externalContent
   72 328 externalContents -> externalContents externalContent
   73 331 externalContent -> bytes
   74 335 objectAnnotationList -> OBJECT_ANNOTATIONS objectAnnotations
   75 339 objectAnnotations -> objectAnnotation
   76 341 objectAnnotations -> objectAnnotations objectAnnotation
   77 344 objectAnnotation -> endBlockData
   78 346 objectAnnotation -> contents endBlockData
   79 349 blockdata -> blockdatashort
   80 351 blockdata -> blockdatalong
   81 354 @10 -> /* empty */
   82 354 @11 -> /* empty */
   83 354 blockdatashort -> TC_BLOCKDATA @10 size @11 bytes
   84 361 size -> BYTE
   85 363 size -> INT
   86 366 @12 -> /* empty */
   87 366 utf -> SHORT @12 STRING
   88 371 bytes -> BYTES_END
   89 373 @13 -> /* empty */
   90 373 bytes -> BYTE @13 bytes
   91 378 @14 -> /* empty */
   92 378 blockdatalong -> TC_BLOCKDATALONG @14 size bytes
   93 383 endBlockData -> TC_ENDBLOCKDATA
   94 387 @15 -> /* empty */
   95 387 newString -> TC_STRING newHandle @15 utf
   96 392 @16 -> /* empty */
   97 392 prevObject -> TC_REFERENCE @16 objectHandle
   98 397 objectHandle -> INT
   99 401 nullReference -> TC_NULL
  100 405 exception -> TC_EXCEPTION reset object reset
  101 409 @17 -> /* empty */
  102 409 elementArray -> INT @17 elements
  103 414 elements -> /* empty */
  104 416 elements -> values
  105 419 @18 -> /* empty */
  106 419 values -> value @18 VALUE_END
  107 422 @19 -> /* empty */
  108 422 values -> values value @19 VALUE_END
  109 427 value -> BOOLEAN
  110 429 value -> CHAR
  111 430 value -> BYTE
  112 431 value -> SHORT
  113 432 value -> INT
  114 433 value -> LONG
  115 434 value -> FLOAT
  116 435 value -> DOUBLE
  117 436 value -> object
  118 439 newHandle -> /* empty */
  119 444 reset -> TC_RESET


Terminals, with rules where they appear

$ (-1)
'B' (66) 45
'C' (67) 46
'D' (68) 47
'F' (70) 48
'I' (73) 49
'J' (74) 50
'L' (76) 54
'S' (83) 51
'Z' (90) 52
'[' (91) 53
error (256)
TC_NULL (257) 99
TC_REFERENCE (258) 97
TC_CLASSDESC (259) 23
TC_OBJECT (260) 58
TC_STRING (261) 95
TC_ARRAY (262) 56
TC_CLASS (263) 15
TC_BLOCKDATA (264) 83
TC_ENDBLOCKDATA (265) 93
TC_RESET (266) 119
TC_BLOCKDATALONG (267) 92
TC_EXCEPTION (268) 100
VALUE_END (269) 106 108
BYTES_END (270) 88
ARRAY_END (271) 56
OBJECT_ANNOTATION (272)
OBJECT_END (273) 58
NOWRCLASS (274) 64 65
WRCLASS (275) 66
EXTERNAL_CONTENTS (276) 70
OBJECT_ANNOTATIONS (277) 74
BOOLEAN (278) 109
SHORT (279) 30 31 87 112
INT (280) 85 98 102 113
LONG (281) 25 114
BYTE (282) 28 84 90 111
STRING (283) 87
CHAR (284) 110
FLOAT (285) 115
DOUBLE (286) 116


Nonterminals, with rules where they appear

startContent (43)
    on left: 1
contents (44)
    on left: 2 3, on right: 3 44 78
content (45)
    on left: 4 5, on right: 1 2 3
object (46)
    on left: 6 7 8 9 10 11 12 13 14, on right: 4 100 117
newClass (47)
    on left: 15, on right: 7
classDesc (48)
    on left: 16 17 18, on right: 15 19 56 58
superClassDesc (49)
    on left: 19, on right: 27
newClassDesc (50)
    on left: 23, on right: 10 16
@1 (51)
    on left: 20, on right: 23
@2 (52)
    on left: 21, on right: 23
@3 (53)
    on left: 22, on right: 23
className (54)
    on left: 24, on right: 23
serialVersionUID (55)
    on left: 25, on right: 23
classDescInfo (56)
    on left: 27, on right: 23
@4 (57)
    on left: 26, on right: 27
classDescFlags (58)
    on left: 28, on right: 27
fields (59)
    on left: 30 31, on right: 27
@5 (60)
    on left: 29, on right: 30
fieldDescs (61)
    on left: 32 33, on right: 30 33
fieldDesc (62)
    on left: 34 35, on right: 32 33
primitiveDesc (63)
    on left: 37, on right: 34
@6 (64)
    on left: 36, on right: 37
objectDesc (65)
    on left: 39, on right: 35
@7 (66)
    on left: 38, on right: 39
fieldName (67)
    on left: 40, on right: 37 39
className1 (68)
    on left: 41 42, on right: 39
classAnnotation (69)
    on left: 43 44, on right: 27
prim_typecode (70)
    on left: 45 46 47 48 49 50 51 52, on right: 37
obj_typecode (71)
    on left: 53 54, on right: 39
newArray (72)
    on left: 56, on right: 8
@8 (73)
    on left: 55, on right: 56
newObject (74)
    on left: 58, on right: 6
@9 (75)
    on left: 57, on right: 58
classdataList (76)
    on left: 59 60 61 62 63, on right: 58
nowrclassList (77)
    on left: 64 65, on right: 60
wrclassList (78)
    on left: 66, on right: 61
wrclasses (79)
    on left: 67 68, on right: 66 68
wrclass (80)
    on left: 69, on right: 67 68
externalContentList (81)
    on left: 70, on right: 62
externalContents (82)
    on left: 71 72, on right: 70 72
externalContent (83)
    on left: 73, on right: 71 72
objectAnnotationList (84)
    on left: 74, on right: 63
objectAnnotations (85)
    on left: 75 76, on right: 74 76
objectAnnotation (86)
    on left: 77 78, on right: 69 75 76
blockdata (87)
    on left: 79 80, on right: 5
blockdatashort (88)
    on left: 83, on right: 79
@10 (89)
    on left: 81, on right: 83
@11 (90)
    on left: 82, on right: 83
size (91)
    on left: 84 85, on right: 83 92
utf (92)
    on left: 87, on right: 24 40 95
@12 (93)
    on left: 86, on right: 87
bytes (94)
    on left: 88 90, on right: 73 83 90 92
@13 (95)
    on left: 89, on right: 90
blockdatalong (96)
    on left: 92, on right: 80
@14 (97)
    on left: 91, on right: 92
endBlockData (98)
    on left: 93, on right: 43 44 77 78
newString (99)
    on left: 95, on right: 9 41
@15 (100)
    on left: 94, on right: 95
prevObject (101)
    on left: 97, on right: 11 18 42
@16 (102)
    on left: 96, on right: 97
objectHandle (103)
    on left: 98, on right: 97
nullReference (104)
    on left: 99, on right: 12 17
exception (105)
    on left: 100, on right: 13
elementArray (106)
    on left: 102, on right: 56
@17 (107)
    on left: 101, on right: 102
elements (108)
    on left: 103 104, on right: 102
values (109)
    on left: 106 108, on right: 64 104 108
@18 (110)
    on left: 105, on right: 106
@19 (111)
    on left: 107, on right: 108
value (112)
    on left: 109 110 111 112 113 114 115 116 117, on right: 69 106
    108
newHandle (113)
    on left: 118, on right: 15 23 56 58 95
reset (114)
    on left: 119, on right: 14 100


state 0

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_BLOCKDATA	shift, and go to state 8
    TC_RESET	shift, and go to state 9
    TC_BLOCKDATALONG	shift, and go to state 10
    TC_EXCEPTION	shift, and go to state 11

    startContent	go to state 158
    content	go to state 12
    object	go to state 13
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    blockdata	go to state 18
    blockdatashort	go to state 19
    blockdatalong	go to state 20
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    reset	go to state 25



state 1

    nullReference  ->  TC_NULL .   (rule 99)

    $default	reduce using rule 99 (nullReference)



state 2

    prevObject  ->  TC_REFERENCE . @16 objectHandle   (rule 97)

    $default	reduce using rule 96 (@16)

    @16 	go to state 26



state 3

    newClassDesc  ->  TC_CLASSDESC . @1 className @2 serialVersionUID newHandle @3 classDescInfo   (rule 23)

    $default	reduce using rule 20 (@1)

    @1  	go to state 27



state 4

    newObject  ->  TC_OBJECT . classDesc newHandle @9 classdataList OBJECT_END   (rule 58)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3

    classDesc	go to state 28
    newClassDesc	go to state 29
    prevObject	go to state 30
    nullReference	go to state 31



state 5

    newString  ->  TC_STRING . newHandle @15 utf   (rule 95)

    $default	reduce using rule 118 (newHandle)

    newHandle	go to state 32



state 6

    newArray  ->  TC_ARRAY . classDesc newHandle @8 elementArray ARRAY_END   (rule 56)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3

    classDesc	go to state 33
    newClassDesc	go to state 29
    prevObject	go to state 30
    nullReference	go to state 31



state 7

    newClass  ->  TC_CLASS . classDesc newHandle   (rule 15)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3

    classDesc	go to state 34
    newClassDesc	go to state 29
    prevObject	go to state 30
    nullReference	go to state 31



state 8

    blockdatashort  ->  TC_BLOCKDATA . @10 size @11 bytes   (rule 83)

    $default	reduce using rule 81 (@10)

    @10 	go to state 35



state 9

    reset  ->  TC_RESET .   (rule 119)

    $default	reduce using rule 119 (reset)



state 10

    blockdatalong  ->  TC_BLOCKDATALONG . @14 size bytes   (rule 92)

    $default	reduce using rule 91 (@14)

    @14 	go to state 36



state 11

    exception  ->  TC_EXCEPTION . reset object reset   (rule 100)

    TC_RESET	shift, and go to state 9

    reset	go to state 37



state 12

    startContent  ->  content .   (rule 1)

    $default	reduce using rule 1 (startContent)



state 13

    content  ->  object .   (rule 4)

    $default	reduce using rule 4 (content)



state 14

    object  ->  newClass .   (rule 7)

    $default	reduce using rule 7 (object)



state 15

    object  ->  newClassDesc .   (rule 10)

    $default	reduce using rule 10 (object)



state 16

    object  ->  newArray .   (rule 8)

    $default	reduce using rule 8 (object)



state 17

    object  ->  newObject .   (rule 6)

    $default	reduce using rule 6 (object)



state 18

    content  ->  blockdata .   (rule 5)

    $default	reduce using rule 5 (content)



state 19

    blockdata  ->  blockdatashort .   (rule 79)

    $default	reduce using rule 79 (blockdata)



state 20

    blockdata  ->  blockdatalong .   (rule 80)

    $default	reduce using rule 80 (blockdata)



state 21

    object  ->  newString .   (rule 9)

    $default	reduce using rule 9 (object)



state 22

    object  ->  prevObject .   (rule 11)

    $default	reduce using rule 11 (object)



state 23

    object  ->  nullReference .   (rule 12)

    $default	reduce using rule 12 (object)



state 24

    object  ->  exception .   (rule 13)

    $default	reduce using rule 13 (object)



state 25

    object  ->  reset .   (rule 14)

    $default	reduce using rule 14 (object)



state 26

    prevObject  ->  TC_REFERENCE @16 . objectHandle   (rule 97)

    INT 	shift, and go to state 38

    objectHandle	go to state 39



state 27

    newClassDesc  ->  TC_CLASSDESC @1 . className @2 serialVersionUID newHandle @3 classDescInfo   (rule 23)

    SHORT	shift, and go to state 40

    className	go to state 41
    utf 	go to state 42



state 28

    newObject  ->  TC_OBJECT classDesc . newHandle @9 classdataList OBJECT_END   (rule 58)

    $default	reduce using rule 118 (newHandle)

    newHandle	go to state 43



state 29

    classDesc  ->  newClassDesc .   (rule 16)

    $default	reduce using rule 16 (classDesc)



state 30

    classDesc  ->  prevObject .   (rule 18)

    $default	reduce using rule 18 (classDesc)



state 31

    classDesc  ->  nullReference .   (rule 17)

    $default	reduce using rule 17 (classDesc)



state 32

    newString  ->  TC_STRING newHandle . @15 utf   (rule 95)

    $default	reduce using rule 94 (@15)

    @15 	go to state 44



state 33

    newArray  ->  TC_ARRAY classDesc . newHandle @8 elementArray ARRAY_END   (rule 56)

    $default	reduce using rule 118 (newHandle)

    newHandle	go to state 45



state 34

    newClass  ->  TC_CLASS classDesc . newHandle   (rule 15)

    $default	reduce using rule 118 (newHandle)

    newHandle	go to state 46



state 35

    blockdatashort  ->  TC_BLOCKDATA @10 . size @11 bytes   (rule 83)

    INT 	shift, and go to state 47
    BYTE	shift, and go to state 48

    size	go to state 49



state 36

    blockdatalong  ->  TC_BLOCKDATALONG @14 . size bytes   (rule 92)

    INT 	shift, and go to state 47
    BYTE	shift, and go to state 48

    size	go to state 50



state 37

    exception  ->  TC_EXCEPTION reset . object reset   (rule 100)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_RESET	shift, and go to state 9
    TC_EXCEPTION	shift, and go to state 11

    object	go to state 51
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    reset	go to state 25



state 38

    objectHandle  ->  INT .   (rule 98)

    $default	reduce using rule 98 (objectHandle)



state 39

    prevObject  ->  TC_REFERENCE @16 objectHandle .   (rule 97)

    $default	reduce using rule 97 (prevObject)



state 40

    utf  ->  SHORT . @12 STRING   (rule 87)

    $default	reduce using rule 86 (@12)

    @12 	go to state 52



state 41

    newClassDesc  ->  TC_CLASSDESC @1 className . @2 serialVersionUID newHandle @3 classDescInfo   (rule 23)

    $default	reduce using rule 21 (@2)

    @2  	go to state 53



state 42

    className  ->  utf .   (rule 24)

    $default	reduce using rule 24 (className)



state 43

    newObject  ->  TC_OBJECT classDesc newHandle . @9 classdataList OBJECT_END   (rule 58)

    $default	reduce using rule 57 (@9)

    @9  	go to state 54



state 44

    newString  ->  TC_STRING newHandle @15 . utf   (rule 95)

    SHORT	shift, and go to state 40

    utf 	go to state 55



state 45

    newArray  ->  TC_ARRAY classDesc newHandle . @8 elementArray ARRAY_END   (rule 56)

    $default	reduce using rule 55 (@8)

    @8  	go to state 56



state 46

    newClass  ->  TC_CLASS classDesc newHandle .   (rule 15)

    $default	reduce using rule 15 (newClass)



state 47

    size  ->  INT .   (rule 85)

    $default	reduce using rule 85 (size)



state 48

    size  ->  BYTE .   (rule 84)

    $default	reduce using rule 84 (size)



state 49

    blockdatashort  ->  TC_BLOCKDATA @10 size . @11 bytes   (rule 83)

    $default	reduce using rule 82 (@11)

    @11 	go to state 57



state 50

    blockdatalong  ->  TC_BLOCKDATALONG @14 size . bytes   (rule 92)

    BYTES_END	shift, and go to state 58
    BYTE	shift, and go to state 59

    bytes	go to state 60



state 51

    exception  ->  TC_EXCEPTION reset object . reset   (rule 100)

    TC_RESET	shift, and go to state 9

    reset	go to state 61



state 52

    utf  ->  SHORT @12 . STRING   (rule 87)

    STRING	shift, and go to state 62



state 53

    newClassDesc  ->  TC_CLASSDESC @1 className @2 . serialVersionUID newHandle @3 classDescInfo   (rule 23)

    LONG	shift, and go to state 63

    serialVersionUID	go to state 64



state 54

    newObject  ->  TC_OBJECT classDesc newHandle @9 . classdataList OBJECT_END   (rule 58)

    NOWRCLASS	shift, and go to state 65
    WRCLASS	shift, and go to state 66
    EXTERNAL_CONTENTS	shift, and go to state 67
    OBJECT_ANNOTATIONS	shift, and go to state 68

    $default	reduce using rule 59 (classdataList)

    classdataList	go to state 69
    nowrclassList	go to state 70
    wrclassList	go to state 71
    externalContentList	go to state 72
    objectAnnotationList	go to state 73



state 55

    newString  ->  TC_STRING newHandle @15 utf .   (rule 95)

    $default	reduce using rule 95 (newString)



state 56

    newArray  ->  TC_ARRAY classDesc newHandle @8 . elementArray ARRAY_END   (rule 56)

    INT 	shift, and go to state 74

    elementArray	go to state 75



state 57

    blockdatashort  ->  TC_BLOCKDATA @10 size @11 . bytes   (rule 83)

    BYTES_END	shift, and go to state 58
    BYTE	shift, and go to state 59

    bytes	go to state 76



state 58

    bytes  ->  BYTES_END .   (rule 88)

    $default	reduce using rule 88 (bytes)



state 59

    bytes  ->  BYTE . @13 bytes   (rule 90)

    $default	reduce using rule 89 (@13)

    @13 	go to state 77



state 60

    blockdatalong  ->  TC_BLOCKDATALONG @14 size bytes .   (rule 92)

    $default	reduce using rule 92 (blockdatalong)



state 61

    exception  ->  TC_EXCEPTION reset object reset .   (rule 100)

    $default	reduce using rule 100 (exception)



state 62

    utf  ->  SHORT @12 STRING .   (rule 87)

    $default	reduce using rule 87 (utf)



state 63

    serialVersionUID  ->  LONG .   (rule 25)

    $default	reduce using rule 25 (serialVersionUID)



state 64

    newClassDesc  ->  TC_CLASSDESC @1 className @2 serialVersionUID . newHandle @3 classDescInfo   (rule 23)

    $default	reduce using rule 118 (newHandle)

    newHandle	go to state 78



state 65

    nowrclassList  ->  NOWRCLASS . values   (rule 64)
    nowrclassList  ->  NOWRCLASS .   (rule 65)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_RESET	shift, and go to state 9
    TC_EXCEPTION	shift, and go to state 11
    BOOLEAN	shift, and go to state 79
    SHORT	shift, and go to state 80
    INT 	shift, and go to state 81
    LONG	shift, and go to state 82
    BYTE	shift, and go to state 83
    CHAR	shift, and go to state 84
    FLOAT	shift, and go to state 85
    DOUBLE	shift, and go to state 86

    $default	reduce using rule 65 (nowrclassList)

    object	go to state 87
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    values	go to state 88
    value	go to state 89
    reset	go to state 25



state 66

    wrclassList  ->  WRCLASS . wrclasses   (rule 66)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_RESET	shift, and go to state 9
    TC_EXCEPTION	shift, and go to state 11
    BOOLEAN	shift, and go to state 79
    SHORT	shift, and go to state 80
    INT 	shift, and go to state 81
    LONG	shift, and go to state 82
    BYTE	shift, and go to state 83
    CHAR	shift, and go to state 84
    FLOAT	shift, and go to state 85
    DOUBLE	shift, and go to state 86

    object	go to state 87
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    wrclasses	go to state 90
    wrclass	go to state 91
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    value	go to state 92
    reset	go to state 25



state 67

    externalContentList  ->  EXTERNAL_CONTENTS . externalContents   (rule 70)

    BYTES_END	shift, and go to state 58
    BYTE	shift, and go to state 59

    externalContents	go to state 93
    externalContent	go to state 94
    bytes	go to state 95



state 68

    objectAnnotationList  ->  OBJECT_ANNOTATIONS . objectAnnotations   (rule 74)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_BLOCKDATA	shift, and go to state 8
    TC_ENDBLOCKDATA	shift, and go to state 96
    TC_RESET	shift, and go to state 9
    TC_BLOCKDATALONG	shift, and go to state 10
    TC_EXCEPTION	shift, and go to state 11

    contents	go to state 97
    content	go to state 98
    object	go to state 13
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    objectAnnotations	go to state 99
    objectAnnotation	go to state 100
    blockdata	go to state 18
    blockdatashort	go to state 19
    blockdatalong	go to state 20
    endBlockData	go to state 101
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    reset	go to state 25



state 69

    newObject  ->  TC_OBJECT classDesc newHandle @9 classdataList . OBJECT_END   (rule 58)

    OBJECT_END	shift, and go to state 102



state 70

    classdataList  ->  nowrclassList .   (rule 60)

    $default	reduce using rule 60 (classdataList)



state 71

    classdataList  ->  wrclassList .   (rule 61)

    $default	reduce using rule 61 (classdataList)



state 72

    classdataList  ->  externalContentList .   (rule 62)

    $default	reduce using rule 62 (classdataList)



state 73

    classdataList  ->  objectAnnotationList .   (rule 63)

    $default	reduce using rule 63 (classdataList)



state 74

    elementArray  ->  INT . @17 elements   (rule 102)

    $default	reduce using rule 101 (@17)

    @17 	go to state 103



state 75

    newArray  ->  TC_ARRAY classDesc newHandle @8 elementArray . ARRAY_END   (rule 56)

    ARRAY_END	shift, and go to state 104



state 76

    blockdatashort  ->  TC_BLOCKDATA @10 size @11 bytes .   (rule 83)

    $default	reduce using rule 83 (blockdatashort)



state 77

    bytes  ->  BYTE @13 . bytes   (rule 90)

    BYTES_END	shift, and go to state 58
    BYTE	shift, and go to state 59

    bytes	go to state 105



state 78

    newClassDesc  ->  TC_CLASSDESC @1 className @2 serialVersionUID newHandle . @3 classDescInfo   (rule 23)

    $default	reduce using rule 22 (@3)

    @3  	go to state 106



state 79

    value  ->  BOOLEAN .   (rule 109)

    $default	reduce using rule 109 (value)



state 80

    value  ->  SHORT .   (rule 112)

    $default	reduce using rule 112 (value)



state 81

    value  ->  INT .   (rule 113)

    $default	reduce using rule 113 (value)



state 82

    value  ->  LONG .   (rule 114)

    $default	reduce using rule 114 (value)



state 83

    value  ->  BYTE .   (rule 111)

    $default	reduce using rule 111 (value)



state 84

    value  ->  CHAR .   (rule 110)

    $default	reduce using rule 110 (value)



state 85

    value  ->  FLOAT .   (rule 115)

    $default	reduce using rule 115 (value)



state 86

    value  ->  DOUBLE .   (rule 116)

    $default	reduce using rule 116 (value)



state 87

    value  ->  object .   (rule 117)

    $default	reduce using rule 117 (value)



state 88

    nowrclassList  ->  NOWRCLASS values .   (rule 64)
    values  ->  values . value @19 VALUE_END   (rule 108)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_RESET	shift, and go to state 9
    TC_EXCEPTION	shift, and go to state 11
    BOOLEAN	shift, and go to state 79
    SHORT	shift, and go to state 80
    INT 	shift, and go to state 81
    LONG	shift, and go to state 82
    BYTE	shift, and go to state 83
    CHAR	shift, and go to state 84
    FLOAT	shift, and go to state 85
    DOUBLE	shift, and go to state 86

    $default	reduce using rule 64 (nowrclassList)

    object	go to state 87
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    value	go to state 107
    reset	go to state 25



state 89

    values  ->  value . @18 VALUE_END   (rule 106)

    $default	reduce using rule 105 (@18)

    @18 	go to state 108



state 90

    wrclassList  ->  WRCLASS wrclasses .   (rule 66)
    wrclasses  ->  wrclasses . wrclass   (rule 68)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_RESET	shift, and go to state 9
    TC_EXCEPTION	shift, and go to state 11
    BOOLEAN	shift, and go to state 79
    SHORT	shift, and go to state 80
    INT 	shift, and go to state 81
    LONG	shift, and go to state 82
    BYTE	shift, and go to state 83
    CHAR	shift, and go to state 84
    FLOAT	shift, and go to state 85
    DOUBLE	shift, and go to state 86

    $default	reduce using rule 66 (wrclassList)

    object	go to state 87
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    wrclass	go to state 109
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    value	go to state 92
    reset	go to state 25



state 91

    wrclasses  ->  wrclass .   (rule 67)

    $default	reduce using rule 67 (wrclasses)



state 92

    wrclass  ->  value . objectAnnotation   (rule 69)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_BLOCKDATA	shift, and go to state 8
    TC_ENDBLOCKDATA	shift, and go to state 96
    TC_RESET	shift, and go to state 9
    TC_BLOCKDATALONG	shift, and go to state 10
    TC_EXCEPTION	shift, and go to state 11

    contents	go to state 97
    content	go to state 98
    object	go to state 13
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    objectAnnotation	go to state 110
    blockdata	go to state 18
    blockdatashort	go to state 19
    blockdatalong	go to state 20
    endBlockData	go to state 101
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    reset	go to state 25



state 93

    externalContentList  ->  EXTERNAL_CONTENTS externalContents .   (rule 70)
    externalContents  ->  externalContents . externalContent   (rule 72)

    BYTES_END	shift, and go to state 58
    BYTE	shift, and go to state 59

    $default	reduce using rule 70 (externalContentList)

    externalContent	go to state 111
    bytes	go to state 95



state 94

    externalContents  ->  externalContent .   (rule 71)

    $default	reduce using rule 71 (externalContents)



state 95

    externalContent  ->  bytes .   (rule 73)

    $default	reduce using rule 73 (externalContent)



state 96

    endBlockData  ->  TC_ENDBLOCKDATA .   (rule 93)

    $default	reduce using rule 93 (endBlockData)



state 97

    contents  ->  contents . content   (rule 3)
    objectAnnotation  ->  contents . endBlockData   (rule 78)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_BLOCKDATA	shift, and go to state 8
    TC_ENDBLOCKDATA	shift, and go to state 96
    TC_RESET	shift, and go to state 9
    TC_BLOCKDATALONG	shift, and go to state 10
    TC_EXCEPTION	shift, and go to state 11

    content	go to state 112
    object	go to state 13
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    blockdata	go to state 18
    blockdatashort	go to state 19
    blockdatalong	go to state 20
    endBlockData	go to state 113
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    reset	go to state 25



state 98

    contents  ->  content .   (rule 2)

    $default	reduce using rule 2 (contents)



state 99

    objectAnnotationList  ->  OBJECT_ANNOTATIONS objectAnnotations .   (rule 74)
    objectAnnotations  ->  objectAnnotations . objectAnnotation   (rule 76)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_BLOCKDATA	shift, and go to state 8
    TC_ENDBLOCKDATA	shift, and go to state 96
    TC_RESET	shift, and go to state 9
    TC_BLOCKDATALONG	shift, and go to state 10
    TC_EXCEPTION	shift, and go to state 11

    $default	reduce using rule 74 (objectAnnotationList)

    contents	go to state 97
    content	go to state 98
    object	go to state 13
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    objectAnnotation	go to state 114
    blockdata	go to state 18
    blockdatashort	go to state 19
    blockdatalong	go to state 20
    endBlockData	go to state 101
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    reset	go to state 25



state 100

    objectAnnotations  ->  objectAnnotation .   (rule 75)

    $default	reduce using rule 75 (objectAnnotations)



state 101

    objectAnnotation  ->  endBlockData .   (rule 77)

    $default	reduce using rule 77 (objectAnnotation)



state 102

    newObject  ->  TC_OBJECT classDesc newHandle @9 classdataList OBJECT_END .   (rule 58)

    $default	reduce using rule 58 (newObject)



state 103

    elementArray  ->  INT @17 . elements   (rule 102)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_RESET	shift, and go to state 9
    TC_EXCEPTION	shift, and go to state 11
    BOOLEAN	shift, and go to state 79
    SHORT	shift, and go to state 80
    INT 	shift, and go to state 81
    LONG	shift, and go to state 82
    BYTE	shift, and go to state 83
    CHAR	shift, and go to state 84
    FLOAT	shift, and go to state 85
    DOUBLE	shift, and go to state 86

    $default	reduce using rule 103 (elements)

    object	go to state 87
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    elements	go to state 115
    values	go to state 116
    value	go to state 89
    reset	go to state 25



state 104

    newArray  ->  TC_ARRAY classDesc newHandle @8 elementArray ARRAY_END .   (rule 56)

    $default	reduce using rule 56 (newArray)



state 105

    bytes  ->  BYTE @13 bytes .   (rule 90)

    $default	reduce using rule 90 (bytes)



state 106

    newClassDesc  ->  TC_CLASSDESC @1 className @2 serialVersionUID newHandle @3 . classDescInfo   (rule 23)

    BYTE	shift, and go to state 117

    classDescInfo	go to state 118
    classDescFlags	go to state 119



state 107

    values  ->  values value . @19 VALUE_END   (rule 108)

    $default	reduce using rule 107 (@19)

    @19 	go to state 120



state 108

    values  ->  value @18 . VALUE_END   (rule 106)

    VALUE_END	shift, and go to state 121



state 109

    wrclasses  ->  wrclasses wrclass .   (rule 68)

    $default	reduce using rule 68 (wrclasses)



state 110

    wrclass  ->  value objectAnnotation .   (rule 69)

    $default	reduce using rule 69 (wrclass)



state 111

    externalContents  ->  externalContents externalContent .   (rule 72)

    $default	reduce using rule 72 (externalContents)



state 112

    contents  ->  contents content .   (rule 3)

    $default	reduce using rule 3 (contents)



state 113

    objectAnnotation  ->  contents endBlockData .   (rule 78)

    $default	reduce using rule 78 (objectAnnotation)



state 114

    objectAnnotations  ->  objectAnnotations objectAnnotation .   (rule 76)

    $default	reduce using rule 76 (objectAnnotations)



state 115

    elementArray  ->  INT @17 elements .   (rule 102)

    $default	reduce using rule 102 (elementArray)



state 116

    elements  ->  values .   (rule 104)
    values  ->  values . value @19 VALUE_END   (rule 108)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_RESET	shift, and go to state 9
    TC_EXCEPTION	shift, and go to state 11
    BOOLEAN	shift, and go to state 79
    SHORT	shift, and go to state 80
    INT 	shift, and go to state 81
    LONG	shift, and go to state 82
    BYTE	shift, and go to state 83
    CHAR	shift, and go to state 84
    FLOAT	shift, and go to state 85
    DOUBLE	shift, and go to state 86

    $default	reduce using rule 104 (elements)

    object	go to state 87
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    value	go to state 107
    reset	go to state 25



state 117

    classDescFlags  ->  BYTE .   (rule 28)

    $default	reduce using rule 28 (classDescFlags)



state 118

    newClassDesc  ->  TC_CLASSDESC @1 className @2 serialVersionUID newHandle @3 classDescInfo .   (rule 23)

    $default	reduce using rule 23 (newClassDesc)



state 119

    classDescInfo  ->  classDescFlags . @4 fields classAnnotation superClassDesc   (rule 27)

    $default	reduce using rule 26 (@4)

    @4  	go to state 122



state 120

    values  ->  values value @19 . VALUE_END   (rule 108)

    VALUE_END	shift, and go to state 123



state 121

    values  ->  value @18 VALUE_END .   (rule 106)

    $default	reduce using rule 106 (values)



state 122

    classDescInfo  ->  classDescFlags @4 . fields classAnnotation superClassDesc   (rule 27)

    SHORT	shift, and go to state 124

    fields	go to state 125



state 123

    values  ->  values value @19 VALUE_END .   (rule 108)

    $default	reduce using rule 108 (values)



state 124

    fields  ->  SHORT . @5 fieldDescs   (rule 30)
    fields  ->  SHORT .   (rule 31)

    'B' 	reduce using rule 29 (@5)
    'C' 	reduce using rule 29 (@5)
    'D' 	reduce using rule 29 (@5)
    'F' 	reduce using rule 29 (@5)
    'I' 	reduce using rule 29 (@5)
    'J' 	reduce using rule 29 (@5)
    'S' 	reduce using rule 29 (@5)
    'Z' 	reduce using rule 29 (@5)
    '[' 	reduce using rule 29 (@5)
    'L' 	reduce using rule 29 (@5)
    $default	reduce using rule 31 (fields)
    @5  	go to state 126



state 125

    classDescInfo  ->  classDescFlags @4 fields . classAnnotation superClassDesc   (rule 27)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_BLOCKDATA	shift, and go to state 8
    TC_ENDBLOCKDATA	shift, and go to state 96
    TC_RESET	shift, and go to state 9
    TC_BLOCKDATALONG	shift, and go to state 10
    TC_EXCEPTION	shift, and go to state 11

    contents	go to state 127
    content	go to state 98
    object	go to state 13
    newClass	go to state 14
    newClassDesc	go to state 15
    classAnnotation	go to state 128
    newArray	go to state 16
    newObject	go to state 17
    blockdata	go to state 18
    blockdatashort	go to state 19
    blockdatalong	go to state 20
    endBlockData	go to state 129
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    reset	go to state 25



state 126

    fields  ->  SHORT @5 . fieldDescs   (rule 30)

    'B' 	shift, and go to state 130
    'C' 	shift, and go to state 131
    'D' 	shift, and go to state 132
    'F' 	shift, and go to state 133
    'I' 	shift, and go to state 134
    'J' 	shift, and go to state 135
    'S' 	shift, and go to state 136
    'Z' 	shift, and go to state 137
    '[' 	shift, and go to state 138
    'L' 	shift, and go to state 139

    fieldDescs	go to state 140
    fieldDesc	go to state 141
    primitiveDesc	go to state 142
    objectDesc	go to state 143
    prim_typecode	go to state 144
    obj_typecode	go to state 145



state 127

    contents  ->  contents . content   (rule 3)
    classAnnotation  ->  contents . endBlockData   (rule 44)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3
    TC_OBJECT	shift, and go to state 4
    TC_STRING	shift, and go to state 5
    TC_ARRAY	shift, and go to state 6
    TC_CLASS	shift, and go to state 7
    TC_BLOCKDATA	shift, and go to state 8
    TC_ENDBLOCKDATA	shift, and go to state 96
    TC_RESET	shift, and go to state 9
    TC_BLOCKDATALONG	shift, and go to state 10
    TC_EXCEPTION	shift, and go to state 11

    content	go to state 112
    object	go to state 13
    newClass	go to state 14
    newClassDesc	go to state 15
    newArray	go to state 16
    newObject	go to state 17
    blockdata	go to state 18
    blockdatashort	go to state 19
    blockdatalong	go to state 20
    endBlockData	go to state 146
    newString	go to state 21
    prevObject	go to state 22
    nullReference	go to state 23
    exception	go to state 24
    reset	go to state 25



state 128

    classDescInfo  ->  classDescFlags @4 fields classAnnotation . superClassDesc   (rule 27)

    TC_NULL	shift, and go to state 1
    TC_REFERENCE	shift, and go to state 2
    TC_CLASSDESC	shift, and go to state 3

    classDesc	go to state 147
    superClassDesc	go to state 148
    newClassDesc	go to state 29
    prevObject	go to state 30
    nullReference	go to state 31



state 129

    classAnnotation  ->  endBlockData .   (rule 43)

    $default	reduce using rule 43 (classAnnotation)



state 130

    prim_typecode  ->  'B' .   (rule 45)

    $default	reduce using rule 45 (prim_typecode)



state 131

    prim_typecode  ->  'C' .   (rule 46)

    $default	reduce using rule 46 (prim_typecode)



state 132

    prim_typecode  ->  'D' .   (rule 47)

    $default	reduce using rule 47 (prim_typecode)



state 133

    prim_typecode  ->  'F' .   (rule 48)

    $default	reduce using rule 48 (prim_typecode)



state 134

    prim_typecode  ->  'I' .   (rule 49)

    $default	reduce using rule 49 (prim_typecode)



state 135

    prim_typecode  ->  'J' .   (rule 50)

    $default	reduce using rule 50 (prim_typecode)



state 136

    prim_typecode  ->  'S' .   (rule 51)

    $default	reduce using rule 51 (prim_typecode)



state 137

    prim_typecode  ->  'Z' .   (rule 52)

    $default	reduce using rule 52 (prim_typecode)



state 138

    obj_typecode  ->  '[' .   (rule 53)

    $default	reduce using rule 53 (obj_typecode)



state 139

    obj_typecode  ->  'L' .   (rule 54)

    $default	reduce using rule 54 (obj_typecode)



state 140

    fields  ->  SHORT @5 fieldDescs .   (rule 30)
    fieldDescs  ->  fieldDescs . fieldDesc   (rule 33)

    'B' 	shift, and go to state 130
    'C' 	shift, and go to state 131
    'D' 	shift, and go to state 132
    'F' 	shift, and go to state 133
    'I' 	shift, and go to state 134
    'J' 	shift, and go to state 135
    'S' 	shift, and go to state 136
    'Z' 	shift, and go to state 137
    '[' 	shift, and go to state 138
    'L' 	shift, and go to state 139

    $default	reduce using rule 30 (fields)

    fieldDesc	go to state 149
    primitiveDesc	go to state 142
    objectDesc	go to state 143
    prim_typecode	go to state 144
    obj_typecode	go to state 145



state 141

    fieldDescs  ->  fieldDesc .   (rule 32)

    $default	reduce using rule 32 (fieldDescs)



state 142

    fieldDesc  ->  primitiveDesc .   (rule 34)

    $default	reduce using rule 34 (fieldDesc)



state 143

    fieldDesc  ->  objectDesc .   (rule 35)

    $default	reduce using rule 35 (fieldDesc)



state 144

    primitiveDesc  ->  prim_typecode . @6 fieldName   (rule 37)

    $default	reduce using rule 36 (@6)

    @6  	go to state 150



state 145

    objectDesc  ->  obj_typecode . @7 fieldName className1   (rule 39)

    $default	reduce using rule 38 (@7)

    @7  	go to state 151



state 146

    classAnnotation  ->  contents endBlockData .   (rule 44)

    $default	reduce using rule 44 (classAnnotation)



state 147

    superClassDesc  ->  classDesc .   (rule 19)

    $default	reduce using rule 19 (superClassDesc)



state 148

    classDescInfo  ->  classDescFlags @4 fields classAnnotation superClassDesc .   (rule 27)

    $default	reduce using rule 27 (classDescInfo)



state 149

    fieldDescs  ->  fieldDescs fieldDesc .   (rule 33)

    $default	reduce using rule 33 (fieldDescs)



state 150

    primitiveDesc  ->  prim_typecode @6 . fieldName   (rule 37)

    SHORT	shift, and go to state 40

    fieldName	go to state 152
    utf 	go to state 153



state 151

    objectDesc  ->  obj_typecode @7 . fieldName className1   (rule 39)

    SHORT	shift, and go to state 40

    fieldName	go to state 154
    utf 	go to state 153



state 152

    primitiveDesc  ->  prim_typecode @6 fieldName .   (rule 37)

    $default	reduce using rule 37 (primitiveDesc)



state 153

    fieldName  ->  utf .   (rule 40)

    $default	reduce using rule 40 (fieldName)



state 154

    objectDesc  ->  obj_typecode @7 fieldName . className1   (rule 39)

    TC_REFERENCE	shift, and go to state 2
    TC_STRING	shift, and go to state 5

    className1	go to state 155
    newString	go to state 156
    prevObject	go to state 157



state 155

    objectDesc  ->  obj_typecode @7 fieldName className1 .   (rule 39)

    $default	reduce using rule 39 (objectDesc)



state 156

    className1  ->  newString .   (rule 41)

    $default	reduce using rule 41 (className1)



state 157

    className1  ->  prevObject .   (rule 42)

    $default	reduce using rule 42 (className1)



state 158

    $   	go to state 159



state 159

    $   	go to state 160



state 160

    $default	accept


